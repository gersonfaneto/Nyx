#!/usr/bin/env sh
# vim: ft=sh ts=4 sw=4 sts=4 et :

has() {
	# $1: command to test
	command -v "$1" >/dev/null 2>&1
}

which_exe() {
	# $@: list of commands to test
	for cmd in "$@"; do
		if has "$cmd"; then
			echo "$cmd"
			return
		fi
	done
}

fzf_file_previewer() {
	# $1: file to preview

	# In case that the file name starts with a hyphen
	# and command does not support '--' convention
	fpath=$(realpath -- "$1" 2>/dev/null)

	if [ ! -r "$1" ]; then
		printf "\033[1m%s\033[0m\n" "File not readable:" >&2
		printf "%s\n" "$1" >&2
		return 1
	fi

	# Preview directories
	if [ -d "$1" ]; then
		if has tree; then
			tree_output=$(tree -N -L 4 -C -- "$1")
			info=$(echo "$tree_output" | tail -n 1)
			printf "\033[1m%s\033[0m\n\n" "$info"
			printf "%s\n" "$tree_output" | head -n -1
		else
			if has find && has wc; then
				num_files=$(find "$fpath" -type f | wc -l)
				num_dirs=$(find "$fpath" -type d | wc -l)
				printf "\033[1m%d directories, %d files\033[0m\n" \
					"$num_dirs" "$num_files"
			fi
			ls -l --color=always -- "$1"
		fi
		return
	fi

	# Preview regular files
	if [ -f "$1" ]; then
		case "$(file -b --mime -- "$1")" in
		image/*)
			# Use ASCII image previewers
			case "$(which_exe chafa imgcat tiv)" in
			chafa)
				chafa --format symbols \
					-s "$FZF_PREVIEW_COLUMNS"x"$FZF_PREVIEW_LINES" "$fpath"
				;;
			imgcat)
				imgcat -H -w "$FZF_PREVIEW_COLUMNS" \
					-r "$FZF_PREVIEW_LINES" "$fpath"
				;;
			tiv)
				tiv -w "$FZF_PREVIEW_COLUMNS" -h "$FZF_PREVIEW_LINES" "$fpath"
				;;
			*)
				echo "No ascii image previewer found, install chafa, imgcat or tiv" >&2
				;;
			esac
			;;

		application/pdf*)
			if has pdftotext; then
				pdftotext -l 10 -nopgbrk -nodiag -q "$1" -
				return
			else
				echo 'pdftotext not found' >&2
			fi
			;;

		application/zip*)
			if has unzip; then
				unzip -l "$fpath"
			elif has zip; then
				zip -sf -- "$1"
			else
				echo 'unzip and zip not found' >&2
			fi
			;;

		application/x-tar* | application/gzip*)
			if has tar; then
				tar --ignore-command-error -tf "$1" 2>/dev/null
			else
				echo 'tar not found' >&2
			fi
			;;

		text/html*)
			if has w3m; then
				w3m -dump "$fpath"
				return
			elif has html2text; then
				html2text -- "$1"
				return
			fi
			;;

		*)
			# Use highlight or cat for remaining files
			if has highlight; then
				highlight_config="$HOME/.highlight/themes/highlight.theme"
				if [ ! -e "$highlight_config" ]; then
					highlight -O ansi --force -- "$1"
				else
					highlight -O ansi --force --config-file "$highlight_config" -- "$1"
				fi
				return
			fi

			if has cat; then
				cat "$1"
				return
			fi
			;;
		esac
	fi
}

fzf_file_previewer "$@"
